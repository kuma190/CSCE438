DESIGN

For MP1, i used a single threaded select() approach for both client and server. In a while True loop, the server waits for a change on all socket file descriptors from 0 until the highest socket file descriptor + 1. It uses an fd_set as its source, which is updated every loop to account for disconnections. If a socket is activated on highest+1, it is a new connection and it is handled. Then it loops again. If not, something occurred on the other socket fds and a for loop is used to find which socket fd is set using FD_ISSET. Socket fd contents are read into a buffer, and if there is a command, the command and its message are read. The necessary action is done to accumulate the data for the return message. If no command is detected, it means the client is in chatmode and the message is sent to all the users in the appropriate room.

This is how rooms are handled: there is an array called client_sockets that is set to the max number of sockets that stores the file descriptors. Then there is an array set to max rooms called rooms that stores the room names. When a room is created, the first empty element of the array is populated with the new room. When a room is joined, the index of the room is found. Then in another array called socket_rooms (which is same size as client_sockets), the room index is stored at the same index of the socket fd in client_sockets. When a room is deleted. The index of the room is found, and it is deleted from its place in the room array. Then, socket_rooms is iterated through: when an index is found that stores the room index, it is set to -1, and a message saying that the room has been deleted is sent to the socket fd with the same index in client_sockets.

In the client, the stdin input and sockfd input are handled using the select() single-threaded approach. When a message from server is received in response to a command, it is parsed and an appropriate struct is created. One thing i did differently from the skeleton code is keep the socket alive after the join command instead of resetting it. So, i passed in the sockfd parameter into the process_chatmode function. 

Overall, this project was a good refresher on certain things from 313 and it had a lot of moving parts.
